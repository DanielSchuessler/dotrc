
oleo() {
    browser "http://dict.leo.org/ende?lang=de&lp=ende&search=$*"
}

dwicti()  { browser http://de.wiktionary.org/wiki/${(C)1// /_} }
ewicti()  { browser http://en.wiktionary.org/wiki/${(C)1// /_} }

ggogle()  { browser "http://groups.google.com/groups?q=$*" }
google()  { browser "http://www.google.com/search?&num=100&q=$*" }

hayoo() { browser "http://holumbus.fh-wedel.de/hayoo/hayoo.html#0:$*" }

swikide()   { browser http://de.wikipedia.org/wiki/Spezial:Search/${(C)1} }
swikien()   { browser http://de.wikipedia.org/wiki/Spezial:Search/${(C)1} }

wikide() { browser http://de.wikipedia.org/wiki/"${(C)*}" }
wikien()  { browser http://en.wikipedia.org/wiki/"$*" }


hsdoc() {
    for n in "$@"; do
        f="$HOME/.cabal/share/doc/$n/html/index.html"
        [ -f "$f" ] && browser "$f" || echo "no doc found for: $n"
    done

}

_hsdoc() {
    _files -W $HOME/.cabal/share/doc -/
}

compdef _hsdoc hsdoc

greph () { history 0 | grep $1 }

mcd() { mkdir -p "$@"; cd "$@" }
cl() { cd $1 && ls }

# search for various types or README file in dir and display them in $PAGER
# function readme() { $PAGER -- (#ia3)readme* }
readme() {
    local files
    files=(./(#i)*(read*me|lue*m(in|)ut)*(ND))
    if (($#files))
    then $PAGER $files
    else
        print 'No README files.'
    fi
}

